/*
 * GoldstandardGUI.java
 * 
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 3 of the License, or (at your
 * option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, see <http://www.gnu.org/licenses/>.
 */

package de.uni_leipzig.informatik.pcai042.boa.gui.goldstandard;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class GoldstandardGUI extends CustomComponent
{

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Label label_type;
	@AutoGenerated
	private Label label_label;
	@AutoGenerated
	private Button button_withdrawSentence;
	@AutoGenerated
	private Button button_addSentence;
	@AutoGenerated
	private Button button_add;
	@AutoGenerated
	private Button button_read;
	@AutoGenerated
	private TextField textField_type;
	@AutoGenerated
	private TextField textField_label;
	@AutoGenerated
	private TextField textField_sentence;
	@AutoGenerated
	private Label label_annotation;
	@AutoGenerated
	private Label label_sentence;
	@AutoGenerated
	private Button button_writeXML;
	@AutoGenerated
	private Button button_openXML;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public GoldstandardGUI()
	{
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout()
	{
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setCaption("close XML");
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// button_openXML
		button_openXML = new Button();
		button_openXML.setCaption("open XML");
		button_openXML.setImmediate(true);
		button_openXML.setWidth("-1px");
		button_openXML.setHeight("-1px");
		mainLayout.addComponent(button_openXML, "top:0.0px;left:80.0px;");
		
		// button_writeXML
		button_writeXML = new Button();
		button_writeXML.setCaption("write XML");
		button_writeXML.setImmediate(true);
		button_writeXML.setWidth("-1px");
		button_writeXML.setHeight("26px");
		mainLayout.addComponent(button_writeXML, "top:0.0px;left:180.0px;");
		
		// label_sentence
		label_sentence = new Label();
		label_sentence.setImmediate(false);
		label_sentence.setWidth("-1px");
		label_sentence.setHeight("-1px");
		label_sentence.setValue("Sentence:");
		mainLayout.addComponent(label_sentence, "top:40.0px;left:0.0px;");
		
		// label_annotation
		label_annotation = new Label();
		label_annotation.setImmediate(false);
		label_annotation.setWidth("-1px");
		label_annotation.setHeight("-1px");
		label_annotation.setValue("Annotation:");
		mainLayout.addComponent(label_annotation, "top:120.0px;left:0.0px;");
		
		// textField_sentence
		textField_sentence = new TextField();
		textField_sentence.setImmediate(false);
		textField_sentence.setWidth("340px");
		textField_sentence.setHeight("66px");
		textField_sentence.setSecret(false);
		mainLayout.addComponent(textField_sentence, "top:40.0px;left:80.0px;");
		
		// textField_label
		textField_label = new TextField();
		textField_label.setImmediate(false);
		textField_label.setWidth("160px");
		textField_label.setHeight("44px");
		textField_label.setSecret(false);
		mainLayout.addComponent(textField_label, "top:140.0px;left:80.0px;");
		
		// textField_type
		textField_type = new TextField();
		textField_type.setImmediate(false);
		textField_type.setWidth("162px");
		textField_type.setHeight("44px");
		textField_type.setSecret(false);
		mainLayout.addComponent(textField_type, "top:140.0px;left:258.0px;");
		
		// button_read
		button_read = new Button();
		button_read.setCaption("read");
		button_read.setImmediate(true);
		button_read.setWidth("-1px");
		button_read.setHeight("-1px");
		mainLayout.addComponent(button_read, "top:40.0px;left:440.0px;");
		
		// button_add
		button_add = new Button();
		button_add.setCaption("add");
		button_add.setImmediate(true);
		button_add.setWidth("-1px");
		button_add.setHeight("-1px");
		mainLayout.addComponent(button_add, "top:140.0px;left:440.0px;");
		
		// button_addSentence
		button_addSentence = new Button();
		button_addSentence.setCaption("add Sentence");
		button_addSentence.setImmediate(true);
		button_addSentence.setWidth("-1px");
		button_addSentence.setHeight("-1px");
		mainLayout.addComponent(button_addSentence, "top:200.0px;left:80.0px;");
		
		// button_withdrawSentence
		button_withdrawSentence = new Button();
		button_withdrawSentence.setCaption("withdraw Sentence");
		button_withdrawSentence.setImmediate(true);
		button_withdrawSentence.setWidth("-1px");
		button_withdrawSentence.setHeight("-1px");
		mainLayout.addComponent(button_withdrawSentence,
				"top:200.0px;left:200.0px;");
		
		// label_label
		label_label = new Label();
		label_label.setImmediate(false);
		label_label.setWidth("-1px");
		label_label.setHeight("-1px");
		label_label.setValue("Label:");
		mainLayout.addComponent(label_label, "top:120.0px;left:80.0px;");
		
		// label_type
		label_type = new Label();
		label_type.setImmediate(false);
		label_type.setWidth("-1px");
		label_type.setHeight("-1px");
		label_type.setValue("Type:");
		mainLayout.addComponent(label_type, "top:120.0px;left:260.0px;");
		
		return mainLayout;
	}

}