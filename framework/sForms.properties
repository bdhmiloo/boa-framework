#**********************************************************************
#	Properties File of the BoaFramework.
#
#	Any String needed for patterns we search for is stored in here.
#	If you want to extend our Framework with more unit types
#	to be searched this is the file you have to alter.
#
#	To add a unit you need to
#		- go to Unit Types
#		- add the label of the new unit type to the attribute ALL_UNITS
#		- create a new attribute with the same name as the label you just added
#		- add the labels of the sub types you want to split the new unit in, 
#			each separated by a ";", as the value of this new attribute
#		- go to the end of the file and add a comment similar to the ones
#			already existing (optional)
#		- create a new attribute for each sub type listed in the attribute
#			mentioned above and add the surface forms that shall be searched for
#			to the corresponding sub type (again concatenated by ";")
#		- create a new attribute YOUR_UNIT_ALGO and add the name of the SearchAlgorithm
#			subclass that shall be used to search for the new unit (full path necessary)
#
#	There might be a function to do all this in our final release of the EvaluationApp,
#	so take a close look at it before you try to do this manually.
#************************************************************************
#******************************
#		General
#******************************
NUMBERS:one;two;three;four;five;six;seven;eight;nine;ten;eleven;twelve;thirteen;fourteen;fifteen;sixteen;seventeen;eighteen;nineteen;twenty;thirty;forty;fifty;sixty;seventy;eighty;ninety
MATH:+;-;*;/;^;x;\*;\u005C;\u00F7;\u00D7;--;\u00B1;\u00B7;hundred;thousand;million;billion;to
#******************************
#		Unit Types
#******************************
ALL_UNITS: LINEAR_MEASURE;TEMPERATURE;WEIGHT;DATE
LINEAR_MEASURE:NUMBERS;MATH;METER;MICROMETER;MILLIMETER;CENTIMETER;DECIMETER;KILOMETER;INCH;YARD;FEET;SEAMILE;MILE;COMBINED_L
TEMPERATURE:NUMBERS;MATH;KELVIN;CELSIUS;FAHRENHEIT
WEIGHT:NUMBERS;MATH;MICROGRAM;MILLIGRAM;KARAT;KILOGRAM;GRAM;POUND;OUNZE;TON;COMBINED_W
DATE:MONTH;DAY;PATTERNS;PREPOSITIONS
SPEED:NUMBERS;MATH;MPS;KMH;MPH;KNOT;FTS
#******************************
#		Linear Measure
#******************************
LINEAR_MEASURE_ALGO: de.uni_leipzig.informatik.pcai042.boa.searcher.NaiveAlgorithm
METER:m;m.;meters;metres;meter
KILOMETER:kilometers;kilometres;km
MILLIMETER:millimeters;millimetres;mm
CENTIMETER:centimeters;centimetres;cm
DECIMETER:decimeters;decimetres;dm
MICROMETER:\u00B5m;micrometer;micrometre
SEAMILE:sm;seamile;seamiles;nautic mile;nautic miles
FEET:ft;feet;ft.
INCH:inches;inch
YARD:yards;yd;yard
MILE:miles;mi
COMBINED_L:ft&&in;'&&'';feet&&inch
#******************************
#		Temperature
#******************************
TEMPERATURE_ALGO: de.uni_leipzig.informatik.pcai042.boa.searcher.NaiveAlgorithm
KELVIN:kelvin;k;k.;degrees kelvin;degree kelvin;kelvins
CELSIUS:\u00B0c;\u00B0c.;degree celsius;degrees celsius;c;c.
FAHRENHEIT:\u00B0f;\u00B0f.;degrees fahrenheit;degree fahrenheit;f;f.
#******************************
#		Weight
#******************************
WEIGHT_ALGO: de.uni_leipzig.informatik.pcai042.boa.searcher.NaiveAlgorithm
KILOGRAM:kg;kilogram;kilo;kilogramme;kilograms
GRAM:g;g.;gram;grams;
POUND:pounds;labs;lbs;lb;pound
OUNZE:ounze;oz
TON:tonnes;t;ton;tons;metric ton;metric tonnes;metric tons
MICROGRAM:Âµg;microgram;micrograms
MILLIGRAM:mg;milligram;milligrams
KARAT:kt;carat
COMBINED_W:lb&&oz
#******************************
#       DATE
#******************************
DATE_ALGO: de.uni_leipzig.informatik.pcai042.boa.searcher.DateAlgorithm
MONTH:january;february;march;april;may;june;july;august;september;october;november;december;jan.;feb.;mar.;apr.;aug.;sept.;oct.;nov.;dec.
DAY:1.;2.;3.;4.;5.;6.;7.;8.;9.;10.;11.;12.;13.;14.;15.;16.;17.;18.;19.;20.;21.;22.;23.;24.;25.;26.;27.;28.;29.;30.;31.;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;1st;2nd;3rd;4th;5th;6th;7th;8th;9th;10th;11st;12nd;13rd;14th;15th;16th;17th;18th;19th;20th;21st;22nd;23rd;24th;25th;26th;27th;28th;29th;30th;31st;first;second;third;fourth;fifth;sixth;seventh;eighth;ninth;tenth;eleventh;twelfth;thirteenth;fourteenth;fifteenth;sixteenth;seventeenth;eighteenth;nineteenth;twentieth;twenty-first;twenty-second;twenty-third;twenty-fourth;twenty-fifth;twenty-sixth;twenty-seventh;twenty-eighth;twenty-ninth;thirtieth;thirty-first
PATTERNS:d.m.y+;m/d/y+;yyyy-mm-dd;yyyy.mm.dd;yyyy/mm/dd
PREPOSITIONS:in;until;from
DATE_SEPARATOR:/;-;';~;. 
#******************************
#		Speed
#******************************
SPEED_ALGO: de.uni_leipzig.informatik.pcai042.boa.searcher.NaiveAlgorithm
MPS: meter per second;metre per second;meters per second;metres per second;m/s;m\u00B7s^-1;m/sec
KMH:kilometer per hour;kilometre per hour;kilometres per hour;kilometers per hour;km/h;km\u00B7h^-1;km/hour
MPH:miles per hour;mile per hour;mph
KNOT:knots;knot
FTS:feet per second;foot per second;ft/s;ft/sec;ft\u00B7s^-1